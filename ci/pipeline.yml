shared:
  release_artifacts: &release_artifacts
    mirror_files:
    - destination: s3://s3-external-1.amazonaws.com/dpb587-ssoca-us-east-1/artifacts/v{{.Version}}/{{.Name}}
      env:
        AWS_ACCESS_KEY_ID: ((artifacts_s3_access_key))
        AWS_SECRET_ACCESS_KEY: ((artifacts_s3_secret_key))
    options:
      private_key: ((git_private_key))
jobs:
- name: "ci-build-image"
  serial: true
  plan:
  - get: "repo"
    resource: "repo-ci-images"
    trigger: true
  - aggregate:
    - put: "ci-build-docker-image"
      params:
        build: "repo/ci/images/build"
      get_params:
        skip_download: true
- name: build-docs
  serial: true
  plan:
  - aggregate:
    - get: repo
      resource: repo-docs
      trigger: true
    - get: artifacts
      resource: repo-artifacts
      trigger: true
    - get: hugo-site
      trigger: true
  - task: build-docs
    file: repo/ci/tasks/build-docs/config.yml
  - put: repo-gh-pages
    params:
      repository: public
      force: true
- name: unit-tests
  plan:
  - get: repo
    trigger: true
  - put: unit-tests-github-status
    params:
      state: pending
      commit: repo
  - task: unit-tests
    file: repo/ci/tasks/unit-tests/config.yml
    on_failure:
      put: unit-tests-github-status
      params:
        state: failure
        commit: repo
    on_success:
      put: unit-tests-github-status
      params:
        state: success
        commit: repo
- name: unit-coverage
  plan:
  - get: repo
    trigger: true
  - task: unit-coverage
    file: repo/ci/tasks/unit-coverage/config.yml
    params:
      COVERALLS_TOKEN: ((coveralls_token))
- name: build
  serial_groups:
  - version
  plan:
  - get: repo
    trigger: true
    passed:
      - unit-tests
  - put: version
    params:
      pre: dev
  - task: build
    file: repo/ci/tasks/build/config.yml
  - put: repo-dev-artifacts
    params:
      files:
      - build/ssoca-*
      version: version/version
    get_params:
      skip_download: true
- name: promote
  serial_groups:
  - version
  plan:
  - get: repo
    passed:
      - build
  - put: version
    params:
      bump: final
  - task: build
    file: repo/ci/tasks/build/config.yml
  - put: repo-final-artifacts
    params:
      files:
      - build/ssoca-*
      version: version/version
  - task: build-release
    file: repo/ci/tasks/build-release/config.yml
    input_mapping:
      artifacts: repo-final-artifacts
  - put: repo
    params:
      annotate: release/title
      repository: repo
      only_tag: true
      tag: release/tag
  - put: github-release
    params:
      body: release/notes.md
      commitish: release/commit
      name: release/tag
      tag: release/tag
      globs:
      - release/blobs/*
    get_params:
      globs:
      - none
- name: bump-major
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: major
- name: bump-minor
  serial_groups:
  - version
  plan:
  - put: version
    params:
      bump: minor
- name: bump-patch
  serial_groups:
  - version
  plan:
  - get: version
    trigger: true
    passed:
      - promote
  - put: version
    params:
      bump: patch
- name: upgrade-go-in-build-image
  plan:
  - aggregate:
    - get: golang
      trigger: true
      params:
        skip_download: true
    - get: repo
  - task: upgrade
    file: repo/ci/tasks/upgrade-go-in-build-image/config.yml
  - put: repo
    params:
      repository: repo
resources:
- name: repo
  type: git
  icon: code-tags
  source: &repo
    uri: git@github.com:dpb587/ssoca.git
    branch: master
    private_key: ((git_private_key))
- name: repo-dev-artifacts
  type: metalink-repository
  icon: file-cloud
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca.git//ssoca-dev#artifacts
- name: repo-final-artifacts
  type: metalink-repository
  icon: file-cloud
  source:
    << : *release_artifacts
    uri: git+ssh://git@github.com:dpb587/ssoca.git//ssoca-final#artifacts
- name: "repo-ci-images"
  type: "git"
  icon: code-tags
  source:
    uri: git@github.com:dpb587/ssoca.git
    branch: master
    private_key: ((git_private_key))
    paths:
    - "ci/images/*"
    - "ci/images/**/*"
- name: "repo-docs"
  type: "git"
  icon: code-tags
  source:
    uri: git@github.com:dpb587/ssoca.git
    branch: master
    private_key: ((git_private_key))
    paths:
    - "ci/tasks/build-docs/*"
    - "docs/*"
    - "docs/**/*"
- name: "hugo-site"
  type: "git"
  icon: palette-swatch
  source:
    uri: https://github.com/dpb587/hugo-balmy-site.git
- name: "repo-artifacts"
  type: "git"
  icon: file-cloud
  source:
    uri: git@github.com:dpb587/ssoca.git
    branch: artifacts
    private_key: ((git_private_key))
- name: "repo-gh-pages"
  type: "git"
  icon: file-eye
  source:
    uri: git@github.com:dpb587/ssoca.git
    branch: gh-pages
    private_key: ((git_private_key))
- name: github-release
  type: github-release
  icon: github-circle
  source:
    access_token: ((repo_github_token))
    repository: ssoca
    user: dpb587
- name: unit-tests-github-status
  type: github-status
  icon: adjust
  source:
    repository: dpb587/ssoca
    branch: master
    access_token: ((repo_github_token))
    context: unit-tests
- name: "ci-build-docker-image"
  type: "docker-image"
  icon: docker
  source:
    repository: dpb587/ssoca
    username: ((docker_username))
    password: ((docker_password))
    tag: ci-build
- name: "version"
  type: "semver"
  icon: label
  source:
    <<: *repo
    driver: git
    branch: ci-state
    file: version/master
- name: golang
  type: dynamic-metalink
  icon: package-down
  source:
    version_check: |
      curl -s https://golang.org/dl/?mode=json | jq -r '.[].version[2:]'
    metalink_get: |
      curl -s https://golang.org/dl/?mode=json | jq '
        map(select(.version[2:] == env.version)) | map({
          "files": (.files | map({
            "name": .filename,
            "size": .size,
            "urls": [ { "url": "https://dl.google.com/go/\(.filename)" } ],
            "hashes": [ { "type": "sha-256", "hash": .sha256 } ] } ) ) } )[]'
resource_types:
- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource
- name: github-status
  type: docker-image
  source:
    repository: dpb587/github-status-resource
    tag: master
- name: metalink-repository
  type: docker-image
  source:
    repository: dpb587/metalink-repository-resource
